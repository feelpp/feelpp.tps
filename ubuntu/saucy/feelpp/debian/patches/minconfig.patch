Index: feel++-0.90.0/doc/tutorial/CMakeLists.txt
===================================================================
--- feel++-0.90.0.orig/doc/tutorial/CMakeLists.txt	2011-04-19 18:18:53.000000000 +0200
+++ feel++-0.90.0/doc/tutorial/CMakeLists.txt	2011-04-19 18:19:52.000000000 +0200
@@ -80,14 +80,10 @@
  endforeach()
 endmacro()
 
-foreach( docex myapp myintegrals mymesh myfunctionspace laplacian residualestimator)
+foreach( docex myapp )
   add_docex( ${docex} )
 endforeach()
 
-set(FEEL_INSTALL_APPS ${FEEL_INSTALL_APPS};${LIST_APPS} PARENT_SCOPE)
-message(STATUS "doc tutorial: ${LIST_APPS}")
-
-
 add_custom_target(
   tut-prerequisites
   ALL
@@ -100,7 +96,7 @@
 
 if ( NOT FEEL_MINIMAL_CONFIGURATION )
 
-foreach( docex stokes bratu nonlinearpow )
+foreach( docex  mymesh myintegrals myfunctionspace laplacian residualestimator stokes bratu nonlinearpow )
   add_docex( ${docex} )
 endforeach()
 
@@ -111,6 +107,9 @@
 
 endif ( NOT FEEL_MINIMAL_CONFIGURATION )
 
+set(FEEL_INSTALL_APPS ${FEEL_INSTALL_APPS};${LIST_APPS} PARENT_SCOPE)
+message(STATUS "doc tutorial: ${LIST_APPS}")
+
 IF ( OCTAVE_FOUND )
 
 GET_DIRECTORY_PROPERTY(cmake_include_directories INCLUDE_DIRECTORIES)
Index: feel++-0.90.0/CMakeLists.txt
===================================================================
--- feel++-0.90.0.orig/CMakeLists.txt	2011-04-19 18:18:53.000000000 +0200
+++ feel++-0.90.0/CMakeLists.txt	2011-04-19 18:19:04.000000000 +0200
@@ -214,6 +214,7 @@
   set( ENABLE_INSTANTIATION_MODE OFF )
   UNSET( FEEL_INSTANTIATION_MODE CACHE )
   SET(FEEL_MESH_MAX_ORDER "1" CACHE STRING "maximum geometrical order in templates to instantiate" FORCE )
+  add_definitions( -DFEEL_MINIMAL_CONFIGURATION=1 )
 ENDIF( FEEL_MINIMAL_CONFIGURATION )
 
 #
Index: feel++-0.90.0/doc/tutorial/myintegrals.cpp
===================================================================
--- feel++-0.90.0.orig/doc/tutorial/myintegrals.cpp	2011-04-19 18:18:53.000000000 +0200
+++ feel++-0.90.0/doc/tutorial/myintegrals.cpp	2011-04-19 18:19:04.000000000 +0200
@@ -248,10 +248,13 @@
         std::cout << app.optionsDescription() << "\n";
         return 0;
     }
-
+#if defined(FEEL_MINIMAL_CONFIGURATION)
+    app.add( new MyIntegrals<2>( app.vm(), app.about() ) );
+#else
     app.add( new MyIntegrals<1>( app.vm(), app.about() ) );
     app.add( new MyIntegrals<2>( app.vm(), app.about() ) );
     app.add( new MyIntegrals<3>( app.vm(), app.about() ) );
+#endif
 
     app.run();
 }
